2024.06.12


1. Tomcat 실행
	1-1) web.xml (배포 서술자)를 읽음
	1-2) ServletContext 객체 생성(Application 객체-jsp)
		//우리 test프로젝트로 따지면 FrontController 객체 생성
		Web Project와 OS간의 연결정보를 담고있는 객체
		Tomcat이 종료될 때 소멸함
	1-3) Servlet객체 생성
	1-4) client가 접속하는 것을 기다림

2. Client 요청(URL, Method, Parameter)
	2-1) Tomcat이 Request, Response 객체를 생성
	2-2) Servlet의 service(request, response)
		//service()메서드에 request, response 매개변수를 담아서
		request에서 메서드 형식을 조회
		메서드가 get이면 doGet(request, response)호출 
		메서드가 post면 doPost(request, response)호출
	2-3) 응답 발생하면서 Request, Response는 소멸

이후 1-4)로 되돌아가서 client가 요청을 줄 때까지 기다림
Tomcat이 종료될 때까지 반복
		


내장객체 (Tomcat이 직접 라이프사이클을 관리하는 객체)
라이프사이클을 관리하는 주체를 컨테이너(Container)라고 부름
	ServletContext (ApplicationScope)
		Tomcat 부팅시 생성, Tomcat 종료시 소멸

	Session (SessionScope)
		웹브라우저가 처음 서버에 접속시 생성,
		일정시간(기본 30분)이 지나거나 웹브라우저 종료시 소멸

	Request, Response (RequestScope)
		client로부터 요청이 발생하면 생성, 응답이 나가면 소멸

	Page (PageScope)
		jsp를 만나면 생성, jsp를 나가면 소멸



Server요청
	1. 주소창에 직접 입력하는 방식 : 메서드 형식 무조건 Get
	2. a태그를 이용해 대신 입력( 클릭 ) : 메서드 형식 무조건 Get
	3. form태그를 이용해 전송 : Get or Post
		
	4. JS location.href 객체 : 메서드 형식 무조건 Get
	5. ajax : Get or Post
	Get은 즉 주소 창에 노출이 된다
	형식 : url?key=value&key=value

	